%!PS-Adobe-2.0
%%Title: fffsp.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Sep 21 12:06:08 2015
%%DocumentFonts: (atend)
%%BoundingBox: 302 50 554 410
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fffsp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (weijia)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 21 12:06:08 2015)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 302 50 moveto 554 50 lineto 554 410 lineto 302 410 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
2598 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
686 765 M
63 0 V
2598 0 R
-63 0 V
stroke
602 765 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
686 1083 M
63 0 V
2598 0 R
-63 0 V
stroke
602 1083 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
686 1400 M
63 0 V
2598 0 R
-63 0 V
stroke
602 1400 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MRshow
1.000 UL
LTb
686 1717 M
63 0 V
2598 0 R
-63 0 V
stroke
602 1717 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MRshow
1.000 UL
LTb
686 2035 M
63 0 V
2598 0 R
-63 0 V
stroke
602 2035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
1.000 UL
LTb
686 2352 M
63 0 V
2598 0 R
-63 0 V
stroke
602 2352 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MRshow
1.000 UL
LTb
686 448 M
0 63 V
0 1841 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1130 448 M
0 63 V
0 1841 R
0 -63 V
stroke
1130 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1573 448 M
0 63 V
0 1841 R
0 -63 V
stroke
1573 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
2017 448 M
0 63 V
0 1841 R
0 -63 V
stroke
2017 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
1.000 UL
LTb
2460 448 M
0 63 V
0 1841 R
0 -63 V
stroke
2460 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
2904 448 M
0 63 V
0 1841 R
0 -63 V
stroke
2904 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
3347 448 M
0 63 V
0 1841 R
0 -63 V
stroke
3347 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
686 2352 N
686 448 L
2661 0 V
0 1904 V
-2661 0 V
Z stroke
LCb setrgbcolor
112 1400 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (T)]
[(Helvetica) 112.0 -42.0 true true 0 (snapshot)]
[(Helvetica) 140.0 0.0 true true 0 (-T)]
[(Helvetica) 112.0 -42.0 true true 0 (data)]
[(Helvetica) 140.0 0.0 true true 0 ( \(ms\))]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
2016 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time \(sec\))]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.300 UP
1.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
2696 2219 M
[ [(Helvetica) 140.0 0.0 true true 0 (MISS)]
] -46.7 MRshow
LT0
1.00 0.00 0.00 C 730 483 Crs
738 676 Crs
738 572 Crs
738 467 Crs
738 740 Crs
738 635 Crs
738 531 Crs
738 930 Crs
738 826 Crs
738 721 Crs
738 616 Crs
738 511 Crs
738 867 Crs
738 762 Crs
738 657 Crs
738 553 Crs
738 448 Crs
738 562 Crs
738 458 Crs
738 724 Crs
738 619 Crs
738 515 Crs
738 1045 Crs
738 940 Crs
738 835 Crs
738 730 Crs
738 626 Crs
738 521 Crs
738 575 Crs
738 470 Crs
739 699 Crs
739 594 Crs
739 489 Crs
739 762 Crs
739 657 Crs
739 553 Crs
739 448 Crs
739 953 Crs
739 848 Crs
739 743 Crs
739 638 Crs
739 534 Crs
739 464 Crs
739 889 Crs
739 784 Crs
739 680 Crs
739 575 Crs
739 470 Crs
739 584 Crs
739 480 Crs
739 746 Crs
739 642 Crs
739 537 Crs
739 1067 Crs
739 962 Crs
739 857 Crs
739 753 Crs
739 648 Crs
739 543 Crs
739 597 Crs
739 492 Crs
740 803 Crs
740 699 Crs
740 594 Crs
740 489 Crs
740 867 Crs
740 762 Crs
740 657 Crs
740 553 Crs
740 448 Crs
740 1057 Crs
740 953 Crs
740 848 Crs
740 743 Crs
740 638 Crs
740 534 Crs
740 569 Crs
740 464 Crs
740 994 Crs
740 889 Crs
740 784 Crs
740 680 Crs
740 575 Crs
740 470 Crs
740 689 Crs
740 584 Crs
740 480 Crs
740 499 Crs
740 851 Crs
740 746 Crs
740 642 Crs
740 537 Crs
740 1172 Crs
740 1067 Crs
740 962 Crs
740 857 Crs
740 753 Crs
740 648 Crs
740 543 Crs
740 702 Crs
740 597 Crs
740 492 Crs
744 1121 Crs
744 1016 Crs
744 911 Crs
744 807 Crs
744 702 Crs
744 597 Crs
744 492 Crs
744 1184 Crs
744 1079 Crs
744 975 Crs
744 870 Crs
744 765 Crs
744 661 Crs
744 556 Crs
744 451 Crs
744 1375 Crs
744 1270 Crs
744 1165 Crs
744 1060 Crs
744 956 Crs
744 851 Crs
744 746 Crs
744 642 Crs
744 537 Crs
744 886 Crs
744 781 Crs
744 676 Crs
744 572 Crs
744 467 Crs
744 1311 Crs
744 1206 Crs
744 1102 Crs
744 997 Crs
744 892 Crs
744 788 Crs
744 683 Crs
744 578 Crs
744 473 Crs
744 1007 Crs
744 902 Crs
744 797 Crs
744 692 Crs
744 588 Crs
744 483 Crs
744 816 Crs
744 711 Crs
744 607 Crs
744 502 Crs
744 1168 Crs
744 1064 Crs
744 959 Crs
744 854 Crs
744 749 Crs
744 645 Crs
744 540 Crs
744 1489 Crs
744 1384 Crs
744 1279 Crs
744 1175 Crs
744 1070 Crs
744 965 Crs
744 861 Crs
744 756 Crs
744 651 Crs
744 546 Crs
744 1019 Crs
744 914 Crs
744 810 Crs
744 705 Crs
744 600 Crs
744 496 Crs
744 727 Crs
744 623 Crs
744 518 Crs
749 1438 Crs
749 1333 Crs
749 1229 Crs
749 1124 Crs
749 1019 Crs
749 914 Crs
749 810 Crs
749 705 Crs
749 600 Crs
749 496 Crs
749 1502 Crs
749 1397 Crs
749 1292 Crs
749 1187 Crs
749 1083 Crs
749 978 Crs
749 873 Crs
749 769 Crs
749 664 Crs
749 559 Crs
749 454 Crs
749 1692 Crs
749 1587 Crs
749 1483 Crs
749 1378 Crs
749 1273 Crs
749 1168 Crs
749 1064 Crs
749 959 Crs
749 854 Crs
749 749 Crs
749 645 Crs
749 540 Crs
749 1203 Crs
749 1099 Crs
749 994 Crs
749 889 Crs
749 784 Crs
749 680 Crs
749 575 Crs
749 470 Crs
749 1628 Crs
749 1524 Crs
749 1419 Crs
749 1314 Crs
749 1210 Crs
749 1105 Crs
749 1000 Crs
749 895 Crs
749 791 Crs
749 686 Crs
749 581 Crs
749 477 Crs
749 1324 Crs
749 1219 Crs
749 1114 Crs
749 1010 Crs
749 905 Crs
749 800 Crs
749 696 Crs
749 591 Crs
749 486 Crs
749 1133 Crs
749 1029 Crs
749 924 Crs
749 819 Crs
749 715 Crs
749 610 Crs
749 505 Crs
749 1486 Crs
749 1381 Crs
749 1276 Crs
749 1172 Crs
749 1067 Crs
749 962 Crs
749 857 Crs
749 753 Crs
749 648 Crs
749 543 Crs
749 1806 Crs
749 1701 Crs
749 1597 Crs
749 1492 Crs
749 1387 Crs
749 1283 Crs
749 1178 Crs
749 1073 Crs
749 968 Crs
749 864 Crs
749 759 Crs
749 654 Crs
749 550 Crs
749 1337 Crs
749 1232 Crs
749 1127 Crs
749 1022 Crs
749 918 Crs
749 813 Crs
749 708 Crs
749 603 Crs
749 499 Crs
749 1045 Crs
749 940 Crs
749 835 Crs
749 730 Crs
749 626 Crs
749 521 Crs
753 1759 Crs
753 1654 Crs
753 1549 Crs
753 1444 Crs
753 1340 Crs
753 1235 Crs
753 1130 Crs
753 1026 Crs
753 921 Crs
753 816 Crs
753 711 Crs
753 607 Crs
753 502 Crs
753 1822 Crs
753 1717 Crs
753 1613 Crs
753 1508 Crs
753 1403 Crs
753 1298 Crs
753 1194 Crs
753 1089 Crs
753 984 Crs
753 880 Crs
753 775 Crs
753 670 Crs
753 565 Crs
753 461 Crs
753 2012 Crs
753 1908 Crs
753 1803 Crs
753 1698 Crs
753 1594 Crs
753 1489 Crs
753 1384 Crs
753 1279 Crs
753 1175 Crs
753 1070 Crs
753 965 Crs
753 861 Crs
753 756 Crs
753 651 Crs
753 546 Crs
753 1524 Crs
753 1419 Crs
753 1314 Crs
753 1210 Crs
753 1105 Crs
753 1000 Crs
753 895 Crs
753 791 Crs
753 686 Crs
753 581 Crs
753 477 Crs
753 1844 Crs
753 1740 Crs
753 1635 Crs
753 1530 Crs
753 1425 Crs
753 1321 Crs
753 1216 Crs
753 1111 Crs
753 1007 Crs
753 902 Crs
753 797 Crs
753 692 Crs
753 588 Crs
753 483 Crs
753 1540 Crs
753 1435 Crs
753 1330 Crs
753 1225 Crs
753 1121 Crs
753 1016 Crs
753 911 Crs
753 807 Crs
753 702 Crs
753 597 Crs
753 492 Crs
753 1454 Crs
753 1349 Crs
753 1245 Crs
753 1140 Crs
753 1035 Crs
753 930 Crs
753 826 Crs
753 721 Crs
753 616 Crs
753 511 Crs
753 1806 Crs
753 1701 Crs
753 1597 Crs
753 1492 Crs
753 1387 Crs
753 1283 Crs
753 1178 Crs
753 1073 Crs
753 968 Crs
753 864 Crs
753 759 Crs
753 654 Crs
753 550 Crs
753 2127 Crs
753 2022 Crs
753 1917 Crs
753 1813 Crs
753 1708 Crs
753 1603 Crs
753 1498 Crs
753 1394 Crs
753 1289 Crs
753 1184 Crs
753 1079 Crs
753 975 Crs
753 870 Crs
753 765 Crs
753 661 Crs
753 556 Crs
753 451 Crs
753 1657 Crs
753 1552 Crs
753 1448 Crs
753 1343 Crs
753 1238 Crs
753 1133 Crs
753 1029 Crs
753 924 Crs
753 819 Crs
753 715 Crs
753 610 Crs
753 505 Crs
753 1365 Crs
753 1260 Crs
753 1156 Crs
753 1051 Crs
753 946 Crs
753 841 Crs
753 737 Crs
753 632 Crs
753 527 Crs
758 816 Crs
758 711 Crs
758 607 Crs
758 502 Crs
758 2136 Crs
758 2031 Crs
758 1927 Crs
758 1822 Crs
758 1717 Crs
758 1613 Crs
758 1508 Crs
758 1403 Crs
758 1298 Crs
758 1194 Crs
758 1089 Crs
758 984 Crs
758 880 Crs
758 775 Crs
758 670 Crs
758 565 Crs
758 461 Crs
758 1838 Crs
758 1733 Crs
758 1628 Crs
758 1524 Crs
758 1419 Crs
758 1314 Crs
758 1210 Crs
758 1105 Crs
758 1000 Crs
758 895 Crs
758 791 Crs
758 686 Crs
758 581 Crs
758 477 Crs
758 1806 Crs
758 1701 Crs
758 1597 Crs
758 1492 Crs
758 1387 Crs
758 1283 Crs
758 1178 Crs
758 1073 Crs
758 968 Crs
758 864 Crs
758 759 Crs
758 654 Crs
758 550 Crs
758 451 Crs
758 1575 Crs
758 1470 Crs
758 1365 Crs
758 1260 Crs
758 1156 Crs
758 1051 Crs
758 946 Crs
758 841 Crs
758 737 Crs
758 632 Crs
758 527 Crs
762 2158 Crs
762 2054 Crs
762 1949 Crs
762 1844 Crs
762 1740 Crs
762 1635 Crs
762 1530 Crs
762 1425 Crs
762 1321 Crs
762 1216 Crs
762 1111 Crs
762 1007 Crs
762 902 Crs
762 797 Crs
762 692 Crs
762 588 Crs
762 483 Crs
771 623 Crs
771 518 Crs
775 502 Crs
775 473 Crs
775 943 Crs
775 838 Crs
775 734 Crs
775 629 Crs
775 524 Crs
780 816 Crs
780 711 Crs
780 607 Crs
780 502 Crs
780 788 Crs
780 683 Crs
780 578 Crs
780 473 Crs
780 1257 Crs
780 1152 Crs
780 1048 Crs
780 943 Crs
780 838 Crs
780 734 Crs
780 629 Crs
780 524 Crs
784 1133 Crs
784 1029 Crs
784 924 Crs
784 819 Crs
784 715 Crs
784 610 Crs
784 505 Crs
784 1105 Crs
784 1000 Crs
784 895 Crs
784 791 Crs
784 686 Crs
784 581 Crs
784 477 Crs
793 499 Crs
798 718 Crs
798 613 Crs
798 508 Crs
798 559 Crs
798 454 Crs
798 810 Crs
798 705 Crs
798 600 Crs
798 496 Crs
802 1038 Crs
802 934 Crs
802 829 Crs
802 724 Crs
802 619 Crs
802 515 Crs
802 880 Crs
802 775 Crs
802 670 Crs
802 565 Crs
802 461 Crs
802 1130 Crs
802 1026 Crs
802 921 Crs
802 816 Crs
802 711 Crs
802 607 Crs
802 502 Crs
806 984 Crs
806 880 Crs
806 775 Crs
806 670 Crs
806 565 Crs
806 461 Crs
811 527 Crs
811 569 Crs
811 464 Crs
815 645 Crs
815 540 Crs
815 845 Crs
815 740 Crs
815 635 Crs
815 531 Crs
815 448 Crs
815 886 Crs
815 781 Crs
815 676 Crs
815 572 Crs
815 467 Crs
820 965 Crs
820 861 Crs
820 756 Crs
820 651 Crs
820 546 Crs
820 1165 Crs
820 1060 Crs
820 956 Crs
820 851 Crs
820 746 Crs
820 642 Crs
820 537 Crs
820 788 Crs
820 683 Crs
820 578 Crs
820 473 Crs
820 448 Crs
842 448 Crs
851 448 Crs
909 448 Crs
935 448 Crs
935 448 Crs
966 448 Crs
988 448 Crs
997 448 Crs
1019 448 Crs
1081 448 Crs
1081 448 Crs
1108 448 Crs
1135 448 Crs
1139 448 Crs
1152 448 Crs
1166 448 Crs
1179 448 Crs
1183 448 Crs
1259 448 Crs
1263 448 Crs
1290 448 Crs
1299 448 Crs
1312 448 Crs
1321 461 Crs
1348 448 Crs
1348 451 Crs
1348 458 Crs
1352 492 Crs
1352 477 Crs
1356 489 Crs
1410 546 Crs
1414 480 Crs
1445 448 Crs
1472 448 Crs
1521 448 Crs
1640 448 Crs
1693 448 Crs
1702 448 Crs
1813 448 Crs
1844 448 Crs
1849 448 Crs
2381 483 Crs
2385 473 Crs
2385 458 Crs
2585 448 Crs
2882 448 Crs
3046 448 Crs
3166 448 Crs
3312 473 Crs
2979 2219 Crs
% End plot #1
% Begin plot #2
0.300 UP
1.000 UL
LT1
0.00 0.00 1.00 C % End plot #2
1.000 UL
LTb
686 2352 N
686 448 L
2661 0 V
0 1904 V
-2661 0 V
Z stroke
1.000 UP
0.500 UL
LT2
0.00 0.00 1.00 C 863 448 M
0 1904 V
stroke
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
